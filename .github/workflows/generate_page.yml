name: Deploy static content to GitPages

on:
  workflow_dispatch:
  workflow_run:
    workflows: [Generate GitBlog README]
    types:
      - completed

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read
  deployments: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.G_T }}
      USER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      BASE_URL: ${{ github.repository_owner != github.event.repository.name && format('https://{0}.github.io/{1}', github.repository_owner, github.event.repository.name) || format('https://{0}.github.io', github.repository_owner) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # 减少克隆深度

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'  # 使用内置缓存

      - name: Cache Hexo CLI
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-hexo-cli-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-hexo-cli-

      - name: Generate Hexo public
        run: |
          npm install -g hexo-cli --silent
          git clone --depth 1 https://$GH_TOKEN@github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}.git output
          cd output
          npm ci --silent  # 使用 ci 代替 install 以确保一致性
          mkdir -p ./source/_posts/
          cp -r ../Blog/* ./source/_posts/
          hexo clean && hexo generate && gulp
        env:
          NODE_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'output/public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
